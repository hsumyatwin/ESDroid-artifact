79721ZZZonClick:com.addi.Addi$11:virtualinvoke $r6.<com.addi.Addi: void startActivity(android.content.Intent)>($r2)
-1ZZZonClick:com.addi.Addi$11:$r0 := @this: com.addi.Addi$11
-1ZZZonClick:com.addi.Addi$11:$r1 := @parameter0: android.content.DialogInterface
-1ZZZonClick:com.addi.Addi$11:$i0 := @parameter1: int
-1ZZZonClick:com.addi.Addi$11:$r2 = new android.content.Intent
-1ZZZonClick:com.addi.Addi$11:specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW")
-1ZZZonClick:com.addi.Addi$11:$r3 = new java.lang.StringBuilder
-1ZZZonClick:com.addi.Addi$11:specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
-1ZZZonClick:com.addi.Addi$11:virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("market://details?id=")
-1ZZZonClick:com.addi.Addi$11:virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.openintents.filemanager")
-1ZZZonClick:com.addi.Addi$11:$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZonClick:com.addi.Addi$11:$r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4)
-1ZZZonClick:com.addi.Addi$11:$r2 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r5)
-1ZZZonClick:com.addi.Addi$11:$r6 = $r0.<com.addi.Addi$11: com.addi.Addi this$0>
-1ZZZonClick:com.addi.Addi$11:virtualinvoke $r6.<com.addi.Addi: void startActivity(android.content.Intent)>($r2)
-1ZZZonClick:com.addi.Addi$11:return
79710ZZZonActivityResult:com.addi.Addi:virtualinvoke $r7.<android.widget.Toast: void show()>()
-1ZZZonActivityResult:com.addi.Addi:$r0 := @this: com.addi.Addi
-1ZZZonActivityResult:com.addi.Addi:$i0 := @parameter0: int
-1ZZZonActivityResult:com.addi.Addi:$i1 := @parameter1: int
-1ZZZonActivityResult:com.addi.Addi:$r1 := @parameter2: android.content.Intent
-1ZZZonActivityResult:com.addi.Addi:if $i0 != 1 goto $r6 = null
-1ZZZonActivityResult:com.addi.Addi:if $i1 != 0 goto (branch)
-1ZZZonActivityResult:com.addi.Addi:$r2 = $r0.<com.addi.Addi: android.widget.ArrayAdapter _mOutArrayAdapter>
-1ZZZonActivityResult:com.addi.Addi:$r3 = virtualinvoke $r0.<com.addi.Addi: java.lang.String getString(int)>(2131165189)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r2.<android.widget.ArrayAdapter: void add(java.lang.Object)>($r3)
-1ZZZonActivityResult:com.addi.Addi:return
-1ZZZonActivityResult:com.addi.Addi:if $i1 != 1 goto (branch)
-1ZZZonActivityResult:com.addi.Addi:$r3 = virtualinvoke $r0.<com.addi.Addi: java.lang.String getString(int)>(2131165187)
-1ZZZonActivityResult:com.addi.Addi:if $i1 != 2 goto (branch)
-1ZZZonActivityResult:com.addi.Addi:$r3 = virtualinvoke $r0.<com.addi.Addi: java.lang.String getString(int)>(2131165188)
-1ZZZonActivityResult:com.addi.Addi:$r3 = $r0.<com.addi.Addi: java.lang.String _addiEditString>
-1ZZZonActivityResult:com.addi.Addi:$i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>("/")
-1ZZZonActivityResult:com.addi.Addi:$r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0)
-1ZZZonActivityResult:com.addi.Addi:$r4 = $r0.<com.addi.Addi: java.lang.String _addiEditString>
-1ZZZonActivityResult:com.addi.Addi:$i0 = $i0 + 1
-1ZZZonActivityResult:com.addi.Addi:$r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0)
-1ZZZonActivityResult:com.addi.Addi:$i0 = virtualinvoke $r4.<java.lang.String: int length()>()
-1ZZZonActivityResult:com.addi.Addi:$i0 = $i0 - 2
-1ZZZonActivityResult:com.addi.Addi:$r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0)
-1ZZZonActivityResult:com.addi.Addi:$r5 = new java.lang.StringBuilder
-1ZZZonActivityResult:com.addi.Addi:specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cd(\"")
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"); ")
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
-1ZZZonActivityResult:com.addi.Addi:$r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r0.<com.addi.Addi: void executeCmd(java.lang.String,boolean)>($r3, 1)
-1ZZZonActivityResult:com.addi.Addi:goto [?= return]
-1ZZZonActivityResult:com.addi.Addi:if $i1 != 3 goto return
-1ZZZonActivityResult:com.addi.Addi:$r3 = virtualinvoke $r0.<com.addi.Addi: java.lang.String getString(int)>(2131165186)
-1ZZZonActivityResult:com.addi.Addi:$r6 = null
-1ZZZonActivityResult:com.addi.Addi:if $i0 != 4 goto (branch)
-1ZZZonActivityResult:com.addi.Addi:if $r1 == null goto (branch)
-1ZZZonActivityResult:com.addi.Addi:$r6 = virtualinvoke $r1.<android.content.Intent: android.net.Uri getData()>()
-1ZZZonActivityResult:com.addi.Addi:if $r6 == null goto $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "No file found.", 1)
-1ZZZonActivityResult:com.addi.Addi:$r3 = virtualinvoke $r6.<android.net.Uri: java.lang.String getPath()>()
-1ZZZonActivityResult:com.addi.Addi:$r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r3, 0)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r7.<android.widget.Toast: void show()>()
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("edit ")
-1ZZZonActivityResult:com.addi.Addi:$r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "No file found.", 1)
-1ZZZonActivityResult:com.addi.Addi:if $i0 != 5 goto return
-1ZZZonActivityResult:com.addi.Addi:if $r6 == null goto $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "No emplacement found.", 1)
-1ZZZonActivityResult:com.addi.Addi:$r8 = new android.app.AlertDialog$Builder
-1ZZZonActivityResult:com.addi.Addi:specialinvoke $r8.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r0)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("M-file name")
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Filename must end with \".m\"")
-1ZZZonActivityResult:com.addi.Addi:$r9 = new android.widget.EditText
-1ZZZonActivityResult:com.addi.Addi:specialinvoke $r9.<android.widget.EditText: void <init>(android.content.Context)>($r0)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>($r9)
-1ZZZonActivityResult:com.addi.Addi:$r10 = new com.addi.Addi$2
-1ZZZonActivityResult:com.addi.Addi:specialinvoke $r10.<com.addi.Addi$2: void <init>(com.addi.Addi,android.widget.EditText,android.net.Uri)>($r0, $r9, $r6)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Create", $r10)
-1ZZZonActivityResult:com.addi.Addi:$r11 = new com.addi.Addi$3
-1ZZZonActivityResult:com.addi.Addi:specialinvoke $r11.<com.addi.Addi$3: void <init>(com.addi.Addi)>($r0)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Cancel", $r11)
-1ZZZonActivityResult:com.addi.Addi:virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>()
-1ZZZonActivityResult:com.addi.Addi:$r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "No emplacement found.", 1)
79549ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>()
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$r0 := @this: com.addi.Addi
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$i0 := @parameter0: int
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$r1 := @parameter1: java.lang.String
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$r2 = new android.content.Intent
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("org.openintents.action.PICK_FILE")
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.openintents.extra.TITLE", $r1)
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:virtualinvoke $r0.<com.addi.Addi: void startActivityForResult(android.content.Intent,int)>($r2, $i0)
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:return
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$r4 := @caughtexception
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$r3 = new android.app.AlertDialog$Builder
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:specialinvoke $r3.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r0)
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("You need OI File Manager to continue. Go to market?")
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$r5 = new com.addi.Addi$11
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:specialinvoke $r5.<com.addi.Addi$11: void <init>(com.addi.Addi)>($r0)
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Yes", $r5)
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:$r6 = new com.addi.Addi$12
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:specialinvoke $r6.<com.addi.Addi$12: void <init>(com.addi.Addi)>($r0)
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("No", $r6)
-1ZZZonOIFileManagerOptionsItemSelected:com.addi.Addi:virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>()
79531ZZZonOptionsItemSelected:com.addi.Addi:specialinvoke $r0.<com.addi.Addi: void onOIFileManagerOptionsItemSelected(int,java.lang.String)>(5, "Choose directory")
-1ZZZonOptionsItemSelected:com.addi.Addi:$r0 := @this: com.addi.Addi
-1ZZZonOptionsItemSelected:com.addi.Addi:$r1 := @parameter0: android.view.MenuItem
-1ZZZonOptionsItemSelected:com.addi.Addi:$i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>()
-1ZZZonOptionsItemSelected:com.addi.Addi:lookupswitch($i0) {     case 2130968583: goto specialinvoke $r0.<com.addi.Addi: void onOIFileManagerOptionsItemSelected(int,java.lang.String)>(5, "Choose directory");     case 2130968584: goto specialinvoke $r0.<com.addi.Addi: void onOIFileManagerOptionsItemSelected(int,java.lang.String)>(4, "Choose file to open");     case 2130968585: goto $r2 = new android.content.Intent;     default: goto goto [?= return 1]; }
-1ZZZonOptionsItemSelected:com.addi.Addi:goto [?= return 1]
-1ZZZonOptionsItemSelected:com.addi.Addi:$r2 = new android.content.Intent
-1ZZZonOptionsItemSelected:com.addi.Addi:specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lcom/addi/ShowSettingsActivity;")
-1ZZZonOptionsItemSelected:com.addi.Addi:virtualinvoke $r0.<com.addi.Addi: void startActivity(android.content.Intent)>($r2)
-1ZZZonOptionsItemSelected:com.addi.Addi:specialinvoke $r0.<com.addi.Addi: void onOIFileManagerOptionsItemSelected(int,java.lang.String)>(4, "Choose file to open")
-1ZZZonOptionsItemSelected:com.addi.Addi:specialinvoke $r0.<com.addi.Addi: void onOIFileManagerOptionsItemSelected(int,java.lang.String)>(5, "Choose directory")
-1ZZZonOptionsItemSelected:com.addi.Addi:return 1
79437ZZZgetVariables:com.addi.core.interpreter.Context:r1 = $r0.<com.addi.core.interpreter.Context: com.addi.core.interpreter.VariableList variables>
-1ZZZgetVariables:com.addi.core.interpreter.Context:$r0 := @this: com.addi.core.interpreter.Context
-1ZZZgetVariables:com.addi.core.interpreter.Context:r1 = $r0.<com.addi.core.interpreter.Context: com.addi.core.interpreter.VariableList variables>
-1ZZZgetVariables:com.addi.core.interpreter.Context:return r1
78881ZZZ<init>:com.addi.AddiBase$1:specialinvoke $r0.<java.lang.Object: void <init>()>()
-1ZZZ<init>:com.addi.AddiBase$1:$r0 := @this: com.addi.AddiBase$1
-1ZZZ<init>:com.addi.AddiBase$1:$r1 := @parameter0: com.addi.AddiBase
-1ZZZ<init>:com.addi.AddiBase$1:$r0.<com.addi.AddiBase$1: com.addi.AddiBase this$0> = $r1
-1ZZZ<init>:com.addi.AddiBase$1:specialinvoke $r0.<java.lang.Object: void <init>()>()
-1ZZZ<init>:com.addi.AddiBase$1:return
78815ZZZ<init>:com.addi.KeyboardViewExtend:specialinvoke $r0.<com.addi.KeyboardViewExtend: void init(android.content.Context)>($r1)
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r0 := @this: com.addi.KeyboardViewExtend
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r1 := @parameter0: android.content.Context
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r2 := @parameter1: android.util.AttributeSet
-1ZZZ<init>:com.addi.KeyboardViewExtend:specialinvoke $r0.<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2)
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r0.<com.addi.KeyboardViewExtend: com.addi.AddiBase _parent> = null
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r0.<com.addi.KeyboardViewExtend: android.inputmethodservice.Keyboard _myKeyboard> = null
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r0.<com.addi.KeyboardViewExtend: android.inputmethodservice.Keyboard _myKeyboardShifted> = null
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r0.<com.addi.KeyboardViewExtend: android.inputmethodservice.Keyboard _myKeyboardSymbols> = null
-1ZZZ<init>:com.addi.KeyboardViewExtend:$r0.<com.addi.KeyboardViewExtend: android.inputmethodservice.Keyboard _myKeyboardOps> = null
-1ZZZ<init>:com.addi.KeyboardViewExtend:specialinvoke $r0.<com.addi.KeyboardViewExtend: void init(android.content.Context)>($r1)
-1ZZZ<init>:com.addi.KeyboardViewExtend:return
50348ZZZ<init>:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void init(android.content.Context)>($r1)
-1ZZZ<init>:com.addi.CandidateView:$r0 := @this: com.addi.CandidateView
-1ZZZ<init>:com.addi.CandidateView:$r1 := @parameter0: android.content.Context
-1ZZZ<init>:com.addi.CandidateView:$r2 := @parameter1: android.util.AttributeSet
-1ZZZ<init>:com.addi.CandidateView:specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2)
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: int mTouchX> = -1
-1ZZZ<init>:com.addi.CandidateView:$r3 = newarray (int)[1024]
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: int[] mWordWidth> = $r3
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: int[] mWordX> = $r3
-1ZZZ<init>:com.addi.CandidateView:$r4 = new java.util.ArrayList
-1ZZZ<init>:com.addi.CandidateView:specialinvoke $r4.<java.util.ArrayList: void <init>()>()
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: java.util.List mPossibleCompletions> = $r4
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: java.util.List mPossibleCompletionsRsrvd> = $r4
-1ZZZ<init>:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void init(android.content.Context)>($r1)
-1ZZZ<init>:com.addi.CandidateView:return
49733ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0 := @this: com.addi.core.tokens.FunctionToken
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r1 := @parameter0: com.addi.core.tokens.Token[]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r2 := @parameter1: com.addi.core.interpreter.GlobalValues
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = <com.addi.core.tokens.FunctionToken: boolean breakHit>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto return null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = <com.addi.core.tokens.FunctionToken: boolean continueHit>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $r3 = null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:return null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r4 = new java.lang.StringBuilder
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken: eval ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = $r0.<com.addi.core.tokens.FunctionToken: java.lang.String name>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("return")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: return: control exception")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r6 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.interpreter.Variable getVariable(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r6 == null goto $r10 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager getFunctionManager()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: eval: variable overloads function")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r7 = new com.addi.core.tokens.VariableToken
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r7.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String,com.addi.core.tokens.OperandToken[])>($r5, $r8)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r7.<com.addi.core.tokens.VariableToken: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>(null, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:return $r9
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r10 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager getFunctionManager()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r11 = virtualinvoke $r10.<com.addi.core.functions.FunctionManager: com.addi.core.functions.Function findFunction(com.addi.core.tokens.FunctionToken)>($r0)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = $r11
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= (branch)]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r12 := @caughtexception
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r3 == null goto $r4 = new java.lang.StringBuilder
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $i0 = $r0.<com.addi.core.tokens.FunctionToken: int noOfLeftHandArguments>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r13 = (com.addi.core.functions.UserFunction) $r3
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = virtualinvoke $r13.<com.addi.core.functions.UserFunction: boolean isScript()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0.<com.addi.core.tokens.FunctionToken: boolean scriptTag> = 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = $r0.<com.addi.core.tokens.FunctionToken: int noOfLeftHandArguments>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r3.<com.addi.core.functions.Function: void setNoOfLeftHandArguments(int)>($i0)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken eval = ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r8 == null goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = $r0.<com.addi.core.tokens.FunctionToken: boolean evaluationLockB>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = 0
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i1 = lengthof $r8
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $i0 >= $i1 goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = $r8[$i0]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r9.<com.addi.core.tokens.OperandToken: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>(null, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r8[$i0] = $r9
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = $i0 + 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= $r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r14 = virtualinvoke $r3.<com.addi.core.functions.Function: java.lang.Object clone()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = (com.addi.core.functions.Function) $r14
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r3.<com.addi.core.functions.Function: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>($r8, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= $r0.<com.addi.core.tokens.FunctionToken: boolean isEvaluatedB> = 1]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0.<com.addi.core.tokens.FunctionToken: boolean isEvaluatedB> = 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken result = ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken: undefinded variable or function ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: return: control exception")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r15 = new com.addi.core.interpreter.ControlException
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r15.<com.addi.core.interpreter.ControlException: void <init>()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:throw $r15
49664ZZZevaluate:com.addi.core.tokens.FunctionToken:$r6 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.interpreter.Variable getVariable(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0 := @this: com.addi.core.tokens.FunctionToken
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r1 := @parameter0: com.addi.core.tokens.Token[]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r2 := @parameter1: com.addi.core.interpreter.GlobalValues
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = <com.addi.core.tokens.FunctionToken: boolean breakHit>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto return null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = <com.addi.core.tokens.FunctionToken: boolean continueHit>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $r3 = null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:return null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r4 = new java.lang.StringBuilder
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken: eval ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = $r0.<com.addi.core.tokens.FunctionToken: java.lang.String name>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("return")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: return: control exception")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r6 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.interpreter.Variable getVariable(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r6 == null goto $r10 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager getFunctionManager()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: eval: variable overloads function")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r7 = new com.addi.core.tokens.VariableToken
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r7.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String,com.addi.core.tokens.OperandToken[])>($r5, $r8)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r7.<com.addi.core.tokens.VariableToken: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>(null, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:return $r9
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r10 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager getFunctionManager()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r11 = virtualinvoke $r10.<com.addi.core.functions.FunctionManager: com.addi.core.functions.Function findFunction(com.addi.core.tokens.FunctionToken)>($r0)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = $r11
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= (branch)]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r12 := @caughtexception
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r3 == null goto $r4 = new java.lang.StringBuilder
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $i0 = $r0.<com.addi.core.tokens.FunctionToken: int noOfLeftHandArguments>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r13 = (com.addi.core.functions.UserFunction) $r3
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = virtualinvoke $r13.<com.addi.core.functions.UserFunction: boolean isScript()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0.<com.addi.core.tokens.FunctionToken: boolean scriptTag> = 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = $r0.<com.addi.core.tokens.FunctionToken: int noOfLeftHandArguments>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r3.<com.addi.core.functions.Function: void setNoOfLeftHandArguments(int)>($i0)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken eval = ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r8 == null goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = $r0.<com.addi.core.tokens.FunctionToken: boolean evaluationLockB>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = 0
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i1 = lengthof $r8
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $i0 >= $i1 goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = $r8[$i0]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r9.<com.addi.core.tokens.OperandToken: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>(null, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r8[$i0] = $r9
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = $i0 + 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= $r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r14 = virtualinvoke $r3.<com.addi.core.functions.Function: java.lang.Object clone()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = (com.addi.core.functions.Function) $r14
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r3.<com.addi.core.functions.Function: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>($r8, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= $r0.<com.addi.core.tokens.FunctionToken: boolean isEvaluatedB> = 1]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0.<com.addi.core.tokens.FunctionToken: boolean isEvaluatedB> = 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken result = ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken: undefinded variable or function ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: return: control exception")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r15 = new com.addi.core.interpreter.ControlException
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r15.<com.addi.core.interpreter.ControlException: void <init>()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:throw $r15
49443ZZZevaluate:com.addi.core.tokens.FunctionToken:$r6 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.interpreter.Variable getVariable(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0 := @this: com.addi.core.tokens.FunctionToken
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r1 := @parameter0: com.addi.core.tokens.Token[]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r2 := @parameter1: com.addi.core.interpreter.GlobalValues
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = <com.addi.core.tokens.FunctionToken: boolean breakHit>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto return null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = <com.addi.core.tokens.FunctionToken: boolean continueHit>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $r3 = null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:return null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = null
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r4 = new java.lang.StringBuilder
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken: eval ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = $r0.<com.addi.core.tokens.FunctionToken: java.lang.String name>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("return")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: return: control exception")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r6 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.interpreter.Variable getVariable(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r6 == null goto $r10 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager getFunctionManager()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: eval: variable overloads function")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r7 = new com.addi.core.tokens.VariableToken
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r7.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String,com.addi.core.tokens.OperandToken[])>($r5, $r8)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r7.<com.addi.core.tokens.VariableToken: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>(null, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:return $r9
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r10 = virtualinvoke $r2.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager getFunctionManager()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r11 = virtualinvoke $r10.<com.addi.core.functions.FunctionManager: com.addi.core.functions.Function findFunction(com.addi.core.tokens.FunctionToken)>($r0)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = $r11
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= (branch)]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r12 := @caughtexception
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r5 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r5)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r3 == null goto $r4 = new java.lang.StringBuilder
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $i0 = $r0.<com.addi.core.tokens.FunctionToken: int noOfLeftHandArguments>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r13 = (com.addi.core.functions.UserFunction) $r3
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = virtualinvoke $r13.<com.addi.core.functions.UserFunction: boolean isScript()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0.<com.addi.core.tokens.FunctionToken: boolean scriptTag> = 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = $r0.<com.addi.core.tokens.FunctionToken: int noOfLeftHandArguments>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r3.<com.addi.core.functions.Function: void setNoOfLeftHandArguments(int)>($i0)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken eval = ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $r8 == null goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$z0 = $r0.<com.addi.core.tokens.FunctionToken: boolean evaluationLockB>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 != 0 goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = 0
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i1 = lengthof $r8
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $i0 >= $i1 goto $z0 = $r3 instanceof com.addi.core.functions.UserFunction
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = $r8[$i0]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r9.<com.addi.core.tokens.OperandToken: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>(null, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r8[$i0] = $r9
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$i0 = $i0 + 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= $r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:if $z0 == 0 goto $r8 = $r0.<com.addi.core.tokens.FunctionToken: com.addi.core.tokens.OperandToken[] operands>
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r14 = virtualinvoke $r3.<com.addi.core.functions.Function: java.lang.Object clone()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r3 = (com.addi.core.functions.Function) $r14
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r9 = virtualinvoke $r3.<com.addi.core.functions.Function: com.addi.core.tokens.OperandToken evaluate(com.addi.core.tokens.Token[],com.addi.core.interpreter.GlobalValues)>($r8, $r2)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:goto [?= $r0.<com.addi.core.tokens.FunctionToken: boolean isEvaluatedB> = 1]
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r0.<com.addi.core.tokens.FunctionToken: boolean isEvaluatedB> = 1
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken result = ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionToken: undefinded variable or function ")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionToken: return: control exception")
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:$r15 = new com.addi.core.interpreter.ControlException
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:specialinvoke $r15.<com.addi.core.interpreter.ControlException: void <init>()>()
-1ZZZevaluate:com.addi.core.tokens.FunctionToken:throw $r15
49159ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $z0 == 0 goto return
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r0 := @parameter0: java.lang.String
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$z0 = <com.addi.core.interpreter.ErrorLogger: boolean debugB>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $z0 == 0 goto return
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r1 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $r1 != null goto $r1 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r2 = <java.lang.System: java.io.PrintStream out>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: OPENING FILE")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r1 = new java.io.RandomAccessFile
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:specialinvoke $r1.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>("JMathLib.log", "rw")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:<com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output> = $r1
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r3 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$l0 = virtualinvoke $r3.<java.io.RandomAccessFile: long length()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r4 = new java.lang.StringBuilder
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r5 = <com.addi.core.interpreter.ErrorLogger: java.lang.String indentS>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r1.<java.io.RandomAccessFile: void writeBytes(java.lang.String)>($r5)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r6 := @caughtexception
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: SecurityException")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r7 := @caughtexception
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: IOException")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:return
49159ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $z0 == 0 goto return
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r0 := @parameter0: java.lang.String
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$z0 = <com.addi.core.interpreter.ErrorLogger: boolean debugB>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $z0 == 0 goto return
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r1 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $r1 != null goto $r1 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r2 = <java.lang.System: java.io.PrintStream out>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: OPENING FILE")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r1 = new java.io.RandomAccessFile
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:specialinvoke $r1.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>("JMathLib.log", "rw")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:<com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output> = $r1
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r3 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$l0 = virtualinvoke $r3.<java.io.RandomAccessFile: long length()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r4 = new java.lang.StringBuilder
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r5 = <com.addi.core.interpreter.ErrorLogger: java.lang.String indentS>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r1.<java.io.RandomAccessFile: void writeBytes(java.lang.String)>($r5)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r6 := @caughtexception
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: SecurityException")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r7 := @caughtexception
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: IOException")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:return
49132ZZZfindFunction:com.addi.core.functions.FunctionManager:$r10 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>()
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r0 := @this: com.addi.core.functions.FunctionManager
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r1 := @parameter0: com.addi.core.tokens.FunctionToken
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r3 = virtualinvoke $r1.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r2 = new java.io.File
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r4 = $r0.<com.addi.core.functions.FunctionManager: java.io.File workingDirectory>
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r5 = new java.lang.StringBuilder
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".m")
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r6)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$z0 = virtualinvoke $r2.<java.io.File: boolean exists()>()
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:if $z0 == 0 goto $r9 = $r0.<com.addi.core.functions.FunctionManager: java.util.Map loadedFunctions>
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r7 = $r0.<com.addi.core.functions.FunctionManager: com.addi.core.functions.MFileLoader mLoader>
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r8 = virtualinvoke $r7.<com.addi.core.functions.MFileLoader: com.addi.core.functions.UserFunction loadMFile(java.io.File)>($r2)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:return $r8
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r9 = $r0.<com.addi.core.functions.FunctionManager: java.util.Map loadedFunctions>
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r11 = (com.addi.core.functions.Function) $r10
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:if $r11 != null goto (branch)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r9 = $r0.<com.addi.core.functions.FunctionManager: java.util.Map functions>
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r6 = (java.lang.String) $r10
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:if $r6 != null goto $r9 = $r0.<com.addi.core.functions.FunctionManager: java.util.Map functions>
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r11 = null
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:goto [?= (branch)]
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$z0 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".m")
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:if $z0 == 0 goto $r9 = $r0.<com.addi.core.functions.FunctionManager: java.util.Map functions>
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r11 = virtualinvoke $r7.<com.addi.core.functions.MFileLoader: com.addi.core.functions.UserFunction loadBuiltInMFile(java.lang.String,java.lang.String)>($r3, $r6)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$z0 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".mpackage")
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:if $z0 == 0 goto $r5 = new java.lang.StringBuilder
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r11 = virtualinvoke $r7.<com.addi.core.functions.MFileLoader: com.addi.core.functions.UserFunction loadPackageMFile(java.lang.String,java.lang.String)>($r3, $r6)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r10 = virtualinvoke $r12.<java.lang.Class: java.lang.Object newInstance()>()
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:$r13 := @caughtexception
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:if $r11 == null goto return $r11
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r11)
-1ZZZfindFunction:com.addi.core.functions.FunctionManager:return $r11
49090ZZZgetFunctionManager:com.addi.core.interpreter.GlobalValues:r1 = $r0.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager functionManager>
-1ZZZgetFunctionManager:com.addi.core.interpreter.GlobalValues:$r0 := @this: com.addi.core.interpreter.GlobalValues
-1ZZZgetFunctionManager:com.addi.core.interpreter.GlobalValues:r1 = $r0.<com.addi.core.interpreter.GlobalValues: com.addi.core.functions.FunctionManager functionManager>
-1ZZZgetFunctionManager:com.addi.core.interpreter.GlobalValues:return r1
49010ZZZgetElementString:com.addi.core.tokens.CharToken:$r2 = $r1[$i0]
-1ZZZgetElementString:com.addi.core.tokens.CharToken:$r0 := @this: com.addi.core.tokens.CharToken
-1ZZZgetElementString:com.addi.core.tokens.CharToken:$i0 := @parameter0: int
-1ZZZgetElementString:com.addi.core.tokens.CharToken:$r1 = $r0.<com.addi.core.tokens.CharToken: java.lang.String[] values>
-1ZZZgetElementString:com.addi.core.tokens.CharToken:$r2 = $r1[$i0]
-1ZZZgetElementString:com.addi.core.tokens.CharToken:return $r2
48757ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
48661ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r2.<com.addi.core.tokens.OperandToken: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r1 := @parameter0: java.util.Stack
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$i0 := @parameter1: int
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $i0 != 3 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser parseSingle")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser parseSingle matrix")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= staticinvoke <com.addi.core.interpreter.ErrorLogger: void increaseIndent()>()]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser parseSingle")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void increaseIndent()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = null
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r3 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $r3 != null goto $z0 = $r3 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= staticinvoke <com.addi.core.interpreter.ErrorLogger: void decreaseIndent()>()]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r4 = (com.addi.core.tokens.DelimiterToken) $r3
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$c1 = $r4.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $c1 != 40 goto $c1 = $r4.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found (")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseArithExpression(int)>(0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r3, 41)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 != 0 goto specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" missing )")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= $r5 = new com.addi.core.tokens.Expression]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r5 = new com.addi.core.tokens.Expression
-1ZZZparseSingle:com.addi.core.interpreter.Parser:specialinvoke $r5.<com.addi.core.tokens.Expression: void <init>(com.addi.core.tokens.OperatorToken,com.addi.core.tokens.OperandToken)>(null, $r2)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = $r5
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= (branch)]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $c1 != 91 goto $c1 = $r4.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: matrix begin [")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseMatrix()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $c1 != 123 goto $r6 = new java.lang.StringBuilder
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: cell array begin {")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseCellArray()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r6 = new java.lang.StringBuilder
-1ZZZparseSingle:com.addi.core.interpreter.Parser:specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser closing ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r4.<com.addi.core.tokens.DelimiterToken: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r7)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.FunctionToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r8 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = (com.addi.core.tokens.OperandToken) $r8
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser parseSingle ppp ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r2.<com.addi.core.tokens.OperandToken: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r8 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r8 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r8 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseDotOperator(java.util.Stack,int)>($r1, $i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r8 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r3 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r4 = (com.addi.core.tokens.DelimiterToken) $r8
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found function while parsing variable")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r9 = (com.addi.core.tokens.VariableToken) $r3
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r9.<com.addi.core.tokens.VariableToken: java.lang.String getName()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r10 = new com.addi.core.tokens.FunctionToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:specialinvoke $r10.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>($r7)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseFunctionAndParameters(com.addi.core.tokens.OperandToken,com.addi.core.tokens.OperandToken)>($r10, null)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $c1 != 123 goto (branch)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found cell array structure")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r9 = (com.addi.core.tokens.VariableToken) $r2
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.CharToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r6 = new java.lang.StringBuilder
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= $r9 = (com.addi.core.tokens.VariableToken) $r2]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: VariableToken: ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r9 = (com.addi.core.tokens.VariableToken) $r2
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r3 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:return $r10
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 != 0 goto $z0 = $r3 instanceof com.addi.core.tokens.CharToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: var var")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= $z0 = $r3 instanceof com.addi.core.tokens.CharToken]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: var var")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= $r3 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r7 = virtualinvoke $r3.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r11 = (com.addi.core.tokens.CharToken) $r3
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r11.<com.addi.core.tokens.CharToken: java.lang.String getElementString(int)>(0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:goto [?= $r6 = new java.lang.StringBuilder]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r3.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: var var variable ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r12 = virtualinvoke $r3.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r12)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r13 = newarray (com.addi.core.tokens.OperandToken)[1]
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r11 = new com.addi.core.tokens.CharToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:specialinvoke $r11.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r7)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r13[0] = $r11
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r10.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r13)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.FunctionToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.OperandToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r10 = (com.addi.core.tokens.FunctionToken) $r8
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r7 = virtualinvoke $r10.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("if")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("while")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: if")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseIf()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: if end")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("while")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("for")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: while")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseWhile()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: while end")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("for")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("switch")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: for")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseFor()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: for end")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("switch")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: switch")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseSwitch()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: switch end")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r10 = (com.addi.core.tokens.FunctionToken) $r3
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.OperandToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.OperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r3 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = (com.addi.core.tokens.OperandToken) $r3
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: operand: ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.OperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 != 0 goto $z0 = $r8 instanceof com.addi.core.tokens.MulDivOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.AddSubOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.MulDivOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r8 instanceof com.addi.core.tokens.MulDivOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>("multiple operators * /")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 != 0 goto $z0 = $r8 instanceof com.addi.core.tokens.PowerOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.PowerOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r8 instanceof com.addi.core.tokens.PowerOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>("multiple operators ^")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARSER  op+op: ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.ColonOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: <x> = <y>")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseAssignmentOperator(com.addi.core.tokens.Token,java.util.Stack)>($r3, $r1)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.ColonOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: <x> : <y>")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseColonOperator(com.addi.core.tokens.Token,java.util.Stack)>($r3, $r1)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.AddSubOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: dot-operator")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.MulDivOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r8 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: += or -=")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: *= or /=")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r6 = new java.lang.StringBuilder
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.BinaryOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.RelationOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r3 instanceof com.addi.core.tokens.UnaryOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$z0 = $r3 instanceof com.addi.core.tokens.UnaryOperatorToken
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $z0 == 0 goto (branch)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: unary operator ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseUnaryOperator(com.addi.core.tokens.Token,java.util.Stack)>($r3, $r1)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: <x> ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <y>")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:$r2 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseBinaryOperator(com.addi.core.tokens.Token,java.util.Stack)>($r3, $r1)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown token: ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>($r7)
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void decreaseIndent()>()
-1ZZZparseSingle:com.addi.core.interpreter.Parser:if $r2 == null goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser return: null")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser return: ")
-1ZZZparseSingle:com.addi.core.interpreter.Parser:return $r2
-1ZZZparseSingle:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser return: null")
48578ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
48414ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
48259ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $z0 == 0 goto return
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r0 := @parameter0: java.lang.String
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$z0 = <com.addi.core.interpreter.ErrorLogger: boolean debugB>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $z0 == 0 goto return
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r1 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:if $r1 != null goto $r1 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r2 = <java.lang.System: java.io.PrintStream out>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: OPENING FILE")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r1 = new java.io.RandomAccessFile
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:specialinvoke $r1.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>("JMathLib.log", "rw")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:<com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output> = $r1
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r3 = <com.addi.core.interpreter.ErrorLogger: java.io.RandomAccessFile output>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$l0 = virtualinvoke $r3.<java.io.RandomAccessFile: long length()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r4 = new java.lang.StringBuilder
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r5 = <com.addi.core.interpreter.ErrorLogger: java.lang.String indentS>
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r1.<java.io.RandomAccessFile: void writeBytes(java.lang.String)>($r5)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r6 := @caughtexception
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: SecurityException")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r7 := @caughtexception
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR LOGGER: IOException")
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:$r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r0)
-1ZZZdebugLine:com.addi.core.interpreter.ErrorLogger:return
48215ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
48104ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47962ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
47811ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
47721ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47673ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47673ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47667ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
47577ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47577ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47571ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
47430ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47426ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
47369ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47369ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47363ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
47273ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47273ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47267ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
47219ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 := @parameter0: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r2 := @parameter1: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3 = (com.addi.core.tokens.FunctionToken) $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("isglobal")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 40)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r6 = new java.util.Stack]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r3
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r6.<java.util.Stack: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r2 == null goto $i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r2.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperand(com.addi.core.tokens.OperandToken)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseArithExpression(int)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r1 != null goto virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 41)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 125)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 == null goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter current ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r5.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 44)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = $i0 + 1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[$i0]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + -1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $i0 < 0 goto (branch)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r9 = virtualinvoke $r6.<java.util.Stack: java.lang.Object pop()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r9
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[$i0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= (branch)]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r10 = new com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r10.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String,com.addi.core.tokens.OperandToken[],java.lang.String)>($r4, $r8, "cell")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r10
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3.<com.addi.core.tokens.FunctionToken: boolean evaluationLockB> = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 != null goto $r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global variable ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r5
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
47176ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
47138ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 64 goto return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 43 goto $z0 = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 45 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = 0]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 42 goto return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto $r1 = new com.addi.core.tokens.MulDivOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r1 = new com.addi.core.tokens.MulDivOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<com.addi.core.tokens.MulDivOperatorToken: void <init>(char)>(47)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 <= -1 goto return $z0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.UnaryOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.UnaryOperatorToken: void <init>(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:return $z0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 42 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<com.addi.core.tokens.MulDivOperatorToken: void <init>(char)>(42)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 92 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<com.addi.core.tokens.MulDivOperatorToken: void <init>(char)>(76)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 94 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r4 = new com.addi.core.tokens.PowerOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r4.<com.addi.core.tokens.PowerOperatorToken: void <init>(char)>(109)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r4
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 126 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 61 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 60 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 62 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 126 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 38 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 124 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 61 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 61 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r5 = new com.addi.core.tokens.AssignmentOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r5.<com.addi.core.tokens.AssignmentOperatorToken: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r5
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 58 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r6 = new com.addi.core.tokens.ColonOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r6.<com.addi.core.tokens.ColonOperatorToken: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r6
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 33 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 61 goto $r3 = new com.addi.core.tokens.UnaryOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r7.<com.addi.core.tokens.RelationOperatorToken: void <init>(char)>(110)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r7
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.UnaryOperatorToken: void <init>(char)>(33)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 64 goto return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r8 = new java.lang.StringBuffer
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r9 = new com.addi.core.tokens.FunctionHandleToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r9.<com.addi.core.tokens.FunctionHandleToken: void <init>(java.lang.String)>($r2)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r9
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 60 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 108
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $r7 = new com.addi.core.tokens.RelationOperatorToken]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 62 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 103
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 110
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 61 goto $r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 101
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 38 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 38 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 97
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 124 goto $r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 124 goto $r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 111
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r7.<com.addi.core.tokens.RelationOperatorToken: void <init>(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r10 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r10 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z1 == 0 goto $r10 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r11 = (com.addi.core.tokens.DelimiterToken) $r10
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c1 = $r11.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 44 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 59 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 58 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 91 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 123 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 40 goto $r10 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r10 instanceof com.addi.core.tokens.BinaryOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $r10 != null goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 45 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $i2 = 1]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 45 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 43 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 43 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 == 2 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 45 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 != 2 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r12 = new java.lang.StringBuilder
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: ++asdf --sdfg ")
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r2)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 != -1 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r13 = new com.addi.core.tokens.AddSubOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r13.<com.addi.core.tokens.AddSubOperatorToken: void <init>(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r13
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 45 goto specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = $z0 ^ 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = $z0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = $i2 + 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("end of chars")
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != $c0 goto $r13 = new com.addi.core.tokens.AddSubOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: Increment/Decrement ")
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= return 1]
47036ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47036ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
47030ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
46908ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterChars>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto return 0
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 40 goto (branch)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + 150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel> = $i1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 41 goto $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + -150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 >= 0 goto $r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(int)>(2000)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r2
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 59 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 44 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 32 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 9 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 10 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 0
46777ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46773ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
46729ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46729ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46723ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
46630ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46630ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46624ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
46539ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46539ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46533ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
46435ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46435ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46429ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
46328ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46328ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46323ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
46264ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46264ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46258ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
46168ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46168ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46162ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
46031ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46031ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
46025ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
45823ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
45717ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45717ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45711ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
45516ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45512ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleEmptyLine(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleSpace(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleComment(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleNumber(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleString(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDelimiter(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDotOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = 1]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z1 != 0 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = new java.lang.StringBuilder
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: don\'t know what to do with: >")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r2)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 0
45381ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45381ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45375ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
45302ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45302ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45296ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
45206ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45206ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45195ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
45146ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45146ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
45140ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
45067ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
45015ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
45015ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
45000ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleEmptyLine(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleSpace(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleComment(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleNumber(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleString(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDelimiter(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDotOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = 1]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z1 != 0 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = new java.lang.StringBuilder
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: don\'t know what to do with: >")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r2)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 0
44822ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 := @parameter0: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r2 := @parameter1: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3 = (com.addi.core.tokens.FunctionToken) $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("isglobal")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 40)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r6 = new java.util.Stack]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r3
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r6.<java.util.Stack: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r2 == null goto $i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r2.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperand(com.addi.core.tokens.OperandToken)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseArithExpression(int)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r1 != null goto virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 41)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 125)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 == null goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter current ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r5.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 44)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = $i0 + 1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[$i0]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + -1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $i0 < 0 goto (branch)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r9 = virtualinvoke $r6.<java.util.Stack: java.lang.Object pop()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r9
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[$i0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= (branch)]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r10 = new com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r10.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String,com.addi.core.tokens.OperandToken[],java.lang.String)>($r4, $r8, "cell")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r10
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3.<com.addi.core.tokens.FunctionToken: boolean evaluationLockB> = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 != null goto $r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global variable ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r5
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
44737ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
44631ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44453ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
44363ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44315ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44315ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44309ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
44190ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44190ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44184ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
44097ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44097ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
44064ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
44011ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleString(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleEmptyLine(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleSpace(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleComment(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleNumber(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleString(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDelimiter(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDotOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = 1]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z1 != 0 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = new java.lang.StringBuilder
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: don\'t know what to do with: >")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r2)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 0
43995ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
43925ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43925ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43919ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
43758ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
43669ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
43563ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43563ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43557ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
43456ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43456ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43450ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
43360ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43360ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43354ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
43264ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43264ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
43258ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
43062ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterChars>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto return 0
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 40 goto (branch)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + 150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel> = $i1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 41 goto $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + -150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 >= 0 goto $r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(int)>(2000)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r2
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 59 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 44 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 32 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 9 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 10 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 0
42934ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42934ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42928ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
42886ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 := @parameter0: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r2 := @parameter1: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3 = (com.addi.core.tokens.FunctionToken) $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("isglobal")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 40)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r6 = new java.util.Stack]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r3
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r6.<java.util.Stack: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r2 == null goto $i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r2.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperand(com.addi.core.tokens.OperandToken)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseArithExpression(int)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r1 != null goto virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 41)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 125)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 == null goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter current ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r5.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 44)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = $i0 + 1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[$i0]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + -1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $i0 < 0 goto (branch)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r9 = virtualinvoke $r6.<java.util.Stack: java.lang.Object pop()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r9
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[$i0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= (branch)]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r10 = new com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r10.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String,com.addi.core.tokens.OperandToken[],java.lang.String)>($r4, $r8, "cell")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r10
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3.<com.addi.core.tokens.FunctionToken: boolean evaluationLockB> = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 != null goto $r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global variable ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r5
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
42843ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
42737ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42737ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42731ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
42682ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
42630ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
42630ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
42615ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleEmptyLine(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleSpace(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleComment(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleNumber(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleString(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDelimiter(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDotOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = 1]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z1 != 0 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = new java.lang.StringBuilder
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: don\'t know what to do with: >")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r2)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 0
42511ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42444ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
42297ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterChars>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto return 0
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 40 goto (branch)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + 150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel> = $i1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 41 goto $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + -150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 >= 0 goto $r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(int)>(2000)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r2
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 59 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 44 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 32 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 9 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 10 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 0
42211ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
42138ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42090ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42090ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
42084ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
41977ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
41977ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
41971ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
41881ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
41881ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
41875ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
41818ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto return 0
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto return 0
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:goto [?= $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>]
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Inf")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("inf")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NaN")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>]
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NaN")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.numbertokens.DoubleNumberToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.numbertokens.DoubleNumberToken: void <init>(double)>(#NaN)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r5 = new java.lang.StringBuilder
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>($r6)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto $r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String reservedWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r7 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r7.<com.addi.core.tokens.DelimiterToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r7
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String reservedWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("break")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("continue")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r8 = new com.addi.core.tokens.FunctionToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>("_break")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r8
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("continue")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r8 = new com.addi.core.tokens.FunctionToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>("_continue")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 40 goto $r9 = new com.addi.core.tokens.VariableToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r9 = new com.addi.core.tokens.VariableToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r9.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r9
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r3 = new com.addi.core.tokens.numbertokens.DoubleNumberToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.numbertokens.DoubleNumberToken: void <init>(double)>(#-Infinity)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.numbertokens.DoubleNumberToken: void <init>(double)>(#Infinity)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:return 0
41693ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
41641ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
41641ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
41626ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleEmptyLine(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleSpace(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleComment(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleNumber(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleText(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleString(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDelimiter(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean handleDotOperator(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = 1]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode>
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z1 != 0 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = new java.lang.StringBuilder
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: don\'t know what to do with: >")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<")
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r2)
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()]
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = null
-1ZZZscanNextToken:com.addi.core.interpreter.LexicalAnalyser:return 0
41529ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
41314ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
41225ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
41119ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
40980ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
40876ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
40744ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$i0 := @parameter0: int
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 3 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:goto [?= specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()]
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean parseWhitespaceSwitch> = 0
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean scanNextToken()>()
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken>
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken> = $r1
-1ZZZgetNextToken:com.addi.core.interpreter.LexicalAnalyser:return $r1
40702ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 := @parameter0: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r2 := @parameter1: com.addi.core.tokens.OperandToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3 = (com.addi.core.tokens.FunctionToken) $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("isglobal")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 40)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r6 = new java.util.Stack]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 123)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = $r5 instanceof com.addi.core.tokens.DotOperatorToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r3
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r6 = new java.util.Stack
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r6.<java.util.Stack: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r2 == null goto $i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r2.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperand(com.addi.core.tokens.OperandToken)>($r2)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = 0
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseArithExpression(int)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r1 != null goto virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 41)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 125)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = virtualinvoke $r6.<java.util.Stack: int size()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r1.<com.addi.core.tokens.OperandToken: void setDisplayResult(boolean)>(0)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 == null goto $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: function parse Parameter current ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r4 = virtualinvoke $r5.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z1 = specialinvoke $r0.<com.addi.core.interpreter.Parser: boolean isExpectedDelimiter(com.addi.core.tokens.Token,char)>($r5, 44)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $i0 = $i0 + 1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z1 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = virtualinvoke $r6.<java.util.Stack: int size()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[$i0]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$i0 = $i0 + -1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $i0 < 0 goto (branch)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r9 = virtualinvoke $r6.<java.util.Stack: java.lang.Object pop()>()
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r9
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[$i0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= (branch)]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r10 = new com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:specialinvoke $r10.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String,com.addi.core.tokens.OperandToken[],java.lang.String)>($r4, $r8, "cell")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:return $r10
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r3.<com.addi.core.tokens.FunctionToken: void setOperands(com.addi.core.tokens.OperandToken[])>($r8)
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwParserException(java.lang.String)>(" error parsing parameter")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("Parser: found global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r3.<com.addi.core.tokens.FunctionToken: boolean evaluationLockB> = 1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $r5 != null goto $r7 = new java.lang.StringBuilder
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto $z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$z0 = $r5 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parser: global variable ")
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8 = newarray (com.addi.core.tokens.OperandToken)[1]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r1 = (com.addi.core.tokens.OperandToken) $r5
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:$r8[0] = $r1
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:goto [?= $r5 = virtualinvoke $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunctionAndParameters:com.addi.core.interpreter.Parser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("Parser: global")
40659ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
40553ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
40494ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
40359ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
40359ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
40349ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
40095ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterChars>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto return 0
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 40 goto (branch)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + 150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel> = $i1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 41 goto $i1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int bracketLevel>
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$i1 = $i1 + -150
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $i1 >= 0 goto $r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(int)>(2000)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r2 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<com.addi.core.tokens.DelimiterToken: void <init>(char)>($c0)
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r2
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 59 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 44 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 32 goto $z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 9 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 10 goto return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleDelimiter:com.addi.core.interpreter.LexicalAnalyser:return 0
39956ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39880ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39880ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39874ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
39772ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39772ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39766ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
39678ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39678ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39672ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
39582ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39582ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39576ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
39486ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39486ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
39480ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
39416ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto return 0
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:goto [?= $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>]
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Inf")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("inf")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NaN")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>]
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NaN")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.numbertokens.DoubleNumberToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.numbertokens.DoubleNumberToken: void <init>(double)>(#NaN)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String delimiterWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r5 = new java.lang.StringBuilder
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>($r6)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto $r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String reservedWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r7 = new com.addi.core.tokens.DelimiterToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r7.<com.addi.core.tokens.DelimiterToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r7
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r4 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String reservedWords>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $i1 == -1 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("break")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("continue")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r8 = new com.addi.core.tokens.FunctionToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>("_break")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r8
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("continue")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r8 = new com.addi.core.tokens.FunctionToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>("_continue")
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<com.addi.core.tokens.FunctionToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 40 goto $r9 = new com.addi.core.tokens.VariableToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r9 = new com.addi.core.tokens.VariableToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r9.<com.addi.core.tokens.VariableToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r9
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:$z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r3 = new com.addi.core.tokens.numbertokens.DoubleNumberToken
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.numbertokens.DoubleNumberToken: void <init>(double)>(#-Infinity)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.numbertokens.DoubleNumberToken: void <init>(double)>(#Infinity)
-1ZZZhandleText:com.addi.core.interpreter.LexicalAnalyser:return 0
39326ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
39274ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
39274ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
39264ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
39205ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 64 goto return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 43 goto $z0 = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 45 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $z0 = 0]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 42 goto return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto $r1 = new com.addi.core.tokens.MulDivOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r1 = new com.addi.core.tokens.MulDivOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<com.addi.core.tokens.MulDivOperatorToken: void <init>(char)>(47)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 <= -1 goto return $z0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.UnaryOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.UnaryOperatorToken: void <init>(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:return $z0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 42 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<com.addi.core.tokens.MulDivOperatorToken: void <init>(char)>(42)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 92 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r1.<com.addi.core.tokens.MulDivOperatorToken: void <init>(char)>(76)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 94 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r4 = new com.addi.core.tokens.PowerOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r4.<com.addi.core.tokens.PowerOperatorToken: void <init>(char)>(109)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r4
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 126 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 61 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 60 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 62 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 126 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 38 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 124 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 61 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 61 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r5 = new com.addi.core.tokens.AssignmentOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r5.<com.addi.core.tokens.AssignmentOperatorToken: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r5
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 58 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r6 = new com.addi.core.tokens.ColonOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r6.<com.addi.core.tokens.ColonOperatorToken: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r6
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 33 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 61 goto $r3 = new com.addi.core.tokens.UnaryOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r7.<com.addi.core.tokens.RelationOperatorToken: void <init>(char)>(110)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r7
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.UnaryOperatorToken: void <init>(char)>(33)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 64 goto return 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r8 = new java.lang.StringBuffer
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r8.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r9 = new com.addi.core.tokens.FunctionHandleToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r9.<com.addi.core.tokens.FunctionHandleToken: void <init>(java.lang.String)>($r2)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r9
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 60 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 108
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $r7 = new com.addi.core.tokens.RelationOperatorToken]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 62 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 103
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 110
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 61 goto $r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 101
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 38 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 38 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 97
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 124 goto $r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 124 goto $r7 = new com.addi.core.tokens.RelationOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c0 = 111
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r7.<com.addi.core.tokens.RelationOperatorToken: void <init>(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r10 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r10 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z1 == 0 goto $r10 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r11 = (com.addi.core.tokens.DelimiterToken) $r10
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$c1 = $r11.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 44 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 59 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 58 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 91 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 123 goto $z0 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 40 goto $r10 = $r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token lastToken>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z1 = $r10 instanceof com.addi.core.tokens.BinaryOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $r10 != null goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 45 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= $i2 = 1]
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = 0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 45 goto $c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 43 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 43 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto (branch)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 == 2 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 45 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $z0 == 0 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 != 2 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r12 = new java.lang.StringBuilder
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: ++asdf --sdfg ")
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r2)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r2 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String numberChars>
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $i2 != -1 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r13 = new com.addi.core.tokens.AddSubOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r13.<com.addi.core.tokens.AddSubOperatorToken: void <init>(char)>($c0)
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r13
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 45 goto specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = $z0 ^ 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean negative> = $z0
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$i2 = $i2 + 1
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("end of chars")
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:if $c1 != $c0 goto $r13 = new com.addi.core.tokens.AddSubOperatorToken
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LexAna: Increment/Decrement ")
-1ZZZhandleOperator:com.addi.core.interpreter.LexicalAnalyser:goto [?= return 1]
39103ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
38996ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
38939ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
38866ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
38651ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0 := @this: com.addi.core.interpreter.Parser
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$i0 := @parameter0: int
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$z0 = $r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:if $z0 != 0 goto $r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r2 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.interpreter.LexicalAnalyser lex>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = virtualinvoke $r2.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token getNextToken(int)>($i0)
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken> = $r1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r0.<com.addi.core.interpreter.Parser: boolean peekNextTokenBool> = 1
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:$r1 = $r0.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken>
-1ZZZpeekNextToken:com.addi.core.interpreter.Parser:return $r1
38562ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 34 goto (branch)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 39 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getPreviousChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 93 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 41 goto return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String textChars>
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $i2 == -1 goto $r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 0
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuffer
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $c1 == $c0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r3 = new com.addi.core.tokens.CharToken
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r3.<com.addi.core.tokens.CharToken: void <init>(java.lang.String)>($r1)
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: com.addi.core.tokens.Token nextToken> = $r3
-1ZZZhandleString:com.addi.core.interpreter.LexicalAnalyser:return 1
38458ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
38413ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38350ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38350ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38309ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38309ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38267ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38267ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38226ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38226ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38184ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38184ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38143ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38143ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38101ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38101ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38073ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38073ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38032ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
38032ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37990ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37990ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37949ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37949ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37907ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37907ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37866ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37866ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37824ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37824ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37780ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37780ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37738ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37738ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37697ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37697ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37655ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37655ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37552ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37513ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 35 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 37 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto (branch)
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 47 goto (branch)
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto return 0
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 42 goto return 0
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 42 goto $z1 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z1 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $z1 == 0 goto (branch)
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 10 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:return 0
37469ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37469ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37428ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37428ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37386ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37386ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37345ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37345ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37303ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37303ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37262ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37262ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37220ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37220ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37189ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37189ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37147ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37147ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37118ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37118ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37076ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37076ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37035ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
37035ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36993ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36993ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36952ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36952ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36910ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36910ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36869ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36869ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36827ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36827ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36801ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36753ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36753ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36747ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36657ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36657ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36651ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36561ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36561ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36555ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36465ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36465ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36459ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36373ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36373ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36367ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36277ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36277ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36271ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36209ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36209ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36203ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36113ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36113ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
36107ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36017ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
36017ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35976ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35976ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35934ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35911ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35911ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35905ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35815ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35815ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35809ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35719ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35719ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35713ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35623ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35623ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35617ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35527ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35527ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35521ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35394ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35394ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35388ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35341ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35341ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35327ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35279ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35279ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35273ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35183ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35183ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35177ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
35087ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35087ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
35081ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34991ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34991ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34985ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34898ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34898ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34892ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34802ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34802ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34761ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34761ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34719ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34692ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34692ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34686ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34596ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34596ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34590ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34500ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34500ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34494ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34384ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34384ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34378ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34288ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34288ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34282ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34192ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34192ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34186ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34096ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34096ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34090ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
34000ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
34000ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33988ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 := @parameter0: char
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c1 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 35 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 37 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto (branch)
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 47 goto (branch)
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:goto [?= $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()]
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 47 goto return 0
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 42 goto return 0
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z0 = 0
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char getNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 42 goto $z1 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z0 = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: void advance()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:goto [?= (branch)]
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z1 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $z1 == 0 goto (branch)
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 == 10 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:$z0 = virtualinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOChars()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $z0 != 0 goto $c0 = specialinvoke $r0.<com.addi.core.interpreter.LexicalAnalyser: char inspectNextChar()>()
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:if $c0 != 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean invisibleCode> = 1
-1ZZZhandleComment:com.addi.core.interpreter.LexicalAnalyser:return 0
33937ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33937ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33931ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33841ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33841ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33835ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33737ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33737ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33731ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33641ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33641ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33635ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33545ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33545ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33539ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33475ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33475ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33469ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33379ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33379ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33373ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33283ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33283ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33277ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33190ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33190ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33184ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
33094ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33094ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
33088ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32998ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32998ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32957ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32957ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32897ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32897ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32855ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32807ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32807ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32801ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32711ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32711ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32705ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32570ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32570ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32564ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32474ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32474ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32468ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32378ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32378ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32372ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32246ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32246ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32240ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32121ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32121ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32115ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
32022ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32022ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
32016ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31921ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31921ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31915ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31818ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31818ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31812ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31722ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31722ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31716ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31626ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31626ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31620ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31505ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31505ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31464ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31464ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31422ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31378ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31378ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31372ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31288ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31288ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31264ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31216ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31216ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31210ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31120ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31120ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31114ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
31024ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31024ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
31018ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30928ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30928ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30922ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30832ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30832ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30826ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30722ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30722ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30716ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30626ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30626ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30620ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30572ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30572ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30566ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30476ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30476ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30470ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30380ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30380ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30374ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30298ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30298ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30292ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30202ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30202ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30196ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30106ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30106ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30100ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
30010ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30010ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
30004ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29936ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29936ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29895ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29895ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29853ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29853ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29812ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29812ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29770ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29770ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29729ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29729ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29687ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29687ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29646ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29646ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29604ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29604ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29563ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29563ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29521ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29521ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29487ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29487ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29445ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29445ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29404ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29404ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29362ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29362ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29321ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29321ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29279ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29279ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29238ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29238ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29196ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29196ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29140ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29140ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29099ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29099ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29057ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29057ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29016ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
29016ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28974ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28974ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28933ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28933ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28891ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28891ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28850ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28850ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28808ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28808ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28767ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28767ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28725ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28725ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28684ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28684ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28642ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28642ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28608ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28608ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28600ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28600ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28558ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28558ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28540ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28540ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28514ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28514ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28472ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28472ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28431ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28431ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28389ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28389ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28348ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28348ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28317ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28317ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28305ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28305ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28264ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28264ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28222ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28222ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28181ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28181ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 <= 0 goto $i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 - 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: char previousChar> = $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i2 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 >= $i2 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $i0 + 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo> = $i0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 0
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r2 = new java.lang.StringBuilder
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1)
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = $r1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 == 10 goto $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:if $c1 != 13 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String codeLine> = ""
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB> = 1
-1ZZZgetNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
28133ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: int charNo>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$i1 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:if $i0 < $i1 goto $r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return 32
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:$c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0)
-1ZZZinspectNextChar:com.addi.core.interpreter.LexicalAnalyser:return $c2
28069ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r0 := @this: com.addi.core.interpreter.LexicalAnalyser
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$r1 = $r0.<com.addi.core.interpreter.LexicalAnalyser: java.lang.String exp>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:$i0 = virtualinvoke $r1.<java.lang.String: int length()>()
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:if $i0 != 0 goto z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return 1
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:z0 = $r0.<com.addi.core.interpreter.LexicalAnalyser: boolean EOCharsB>
-1ZZZEOChars:com.addi.core.interpreter.LexicalAnalyser:return z0
28002ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r2.<com.addi.core.interpreter.Parser: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r0 := @this: com.addi.core.functions.FunctionParser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 := @parameter0: java.lang.String
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 0
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: parseFunction")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r3 = new com.addi.core.functions.UserFunction
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r3.<com.addi.core.functions.UserFunction: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r2 = new com.addi.core.interpreter.Parser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r2.<com.addi.core.interpreter.Parser: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: void setExpression(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z1 == 0 goto (branch)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r5 = (com.addi.core.tokens.VariableToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r5.<com.addi.core.tokens.VariableToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found m-function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 1
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r6 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r6.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r7 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r7.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function: 1 return value: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$c0 = $r10.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 == 91 goto virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: missing [")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: return parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not unique")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 93 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 44 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found = token")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.FunctionToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r11 = (com.addi.core.tokens.FunctionToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r11.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function name: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setName(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: no function name, but")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r4.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: not ( , but ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: parameter: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: calling parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 41 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setReturnVariables(java.util.ArrayList)>($r6)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setParameterVariables(java.util.ArrayList)>($r7)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r12 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseRemainingExpression()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setCode(com.addi.core.tokens.OperandToken)>($r12)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:return $r3
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setScript(boolean)>(1)
27988ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r3.<com.addi.core.functions.UserFunction: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r0 := @this: com.addi.core.functions.FunctionParser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 := @parameter0: java.lang.String
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 0
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: parseFunction")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r3 = new com.addi.core.functions.UserFunction
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r3.<com.addi.core.functions.UserFunction: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r2 = new com.addi.core.interpreter.Parser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r2.<com.addi.core.interpreter.Parser: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: void setExpression(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z1 == 0 goto (branch)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r5 = (com.addi.core.tokens.VariableToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r5.<com.addi.core.tokens.VariableToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found m-function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 1
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r6 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r6.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r7 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r7.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function: 1 return value: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$c0 = $r10.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 == 91 goto virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: missing [")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: return parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not unique")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 93 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 44 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found = token")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.FunctionToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r11 = (com.addi.core.tokens.FunctionToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r11.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function name: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setName(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: no function name, but")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r4.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: not ( , but ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: parameter: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: calling parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 41 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setReturnVariables(java.util.ArrayList)>($r6)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setParameterVariables(java.util.ArrayList)>($r7)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r12 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseRemainingExpression()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setCode(com.addi.core.tokens.OperandToken)>($r12)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:return $r3
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setScript(boolean)>(1)
27988ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r3.<com.addi.core.functions.UserFunction: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r0 := @this: com.addi.core.functions.FunctionParser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 := @parameter0: java.lang.String
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 0
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: parseFunction")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r3 = new com.addi.core.functions.UserFunction
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r3.<com.addi.core.functions.UserFunction: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r2 = new com.addi.core.interpreter.Parser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r2.<com.addi.core.interpreter.Parser: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: void setExpression(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z1 == 0 goto (branch)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r5 = (com.addi.core.tokens.VariableToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r5.<com.addi.core.tokens.VariableToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found m-function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 1
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r6 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r6.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r7 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r7.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function: 1 return value: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$c0 = $r10.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 == 91 goto virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: missing [")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: return parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not unique")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 93 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 44 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found = token")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.FunctionToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r11 = (com.addi.core.tokens.FunctionToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r11.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function name: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setName(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: no function name, but")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r4.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: not ( , but ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: parameter: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: calling parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 41 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setReturnVariables(java.util.ArrayList)>($r6)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setParameterVariables(java.util.ArrayList)>($r7)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r12 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseRemainingExpression()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setCode(com.addi.core.tokens.OperandToken)>($r12)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:return $r3
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setScript(boolean)>(1)
27984ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: parseFunction")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r0 := @this: com.addi.core.functions.FunctionParser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 := @parameter0: java.lang.String
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 0
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: parseFunction")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r3 = new com.addi.core.functions.UserFunction
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r3.<com.addi.core.functions.UserFunction: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r2 = new com.addi.core.interpreter.Parser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r2.<com.addi.core.interpreter.Parser: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: void setExpression(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z1 == 0 goto (branch)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r5 = (com.addi.core.tokens.VariableToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r5.<com.addi.core.tokens.VariableToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found m-function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 1
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r6 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r6.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r7 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r7.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function: 1 return value: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$c0 = $r10.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 == 91 goto virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: missing [")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: return parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not unique")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 93 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 44 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found = token")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.FunctionToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r11 = (com.addi.core.tokens.FunctionToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r11.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function name: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setName(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: no function name, but")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r4.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: not ( , but ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: parameter: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: calling parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 41 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setReturnVariables(java.util.ArrayList)>($r6)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setParameterVariables(java.util.ArrayList)>($r7)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r12 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseRemainingExpression()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setCode(com.addi.core.tokens.OperandToken)>($r12)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:return $r3
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setScript(boolean)>(1)
27984ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: parseFunction")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r0 := @this: com.addi.core.functions.FunctionParser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 := @parameter0: java.lang.String
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 0
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: parseFunction")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r3 = new com.addi.core.functions.UserFunction
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r3.<com.addi.core.functions.UserFunction: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r2 = new com.addi.core.interpreter.Parser
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r2.<com.addi.core.interpreter.Parser: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: void setExpression(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z1 == 0 goto (branch)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r5 = (com.addi.core.tokens.VariableToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r5.<com.addi.core.tokens.VariableToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found m-function")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = 1
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r6 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r6.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r7 = new java.util.ArrayList
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r7.<java.util.ArrayList: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function: 1 return value: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.DelimiterToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$c0 = $r10.<com.addi.core.tokens.DelimiterToken: char value>
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 == 91 goto virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: missing [")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: return parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not unique")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r9)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:goto [?= $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token getNextToken()>()]
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 93 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 44 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong delimiter")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong return")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: no return value")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.AssignmentOperatorToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r4 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.Token peekNextToken()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: found = token")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = $r4 instanceof com.addi.core.tokens.FunctionToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $z0 = $r4 instanceof com.addi.core.tokens.VariableToken
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r11 = (com.addi.core.tokens.FunctionToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r11.<com.addi.core.tokens.FunctionToken: java.lang.String getName()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: function name: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setName(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto $r8 = new java.lang.StringBuilder
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: no function name, but")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r4.<com.addi.core.tokens.Token: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 != 0 goto staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: not ( , but ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FunctionParser: reading right hand side arguments")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: parameter: ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionParser: calling parameter ")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r1)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $z0 == 0 goto staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:if $c0 != 41 goto $r10 = (com.addi.core.tokens.DelimiterToken) $r4
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setReturnVariables(java.util.ArrayList)>($r6)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setParameterVariables(java.util.ArrayList)>($r7)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:$r12 = virtualinvoke $r2.<com.addi.core.interpreter.Parser: com.addi.core.tokens.OperandToken parseRemainingExpression()>()
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setCode(com.addi.core.tokens.OperandToken)>($r12)
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:return $r3
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.Errors: void throwMathLibException(java.lang.String)>("FunctionParser: wrong argument")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:staticinvoke <com.addi.core.interpreter.ErrorLogger: void debugLine(java.lang.String)>("FuntionParser: m-script file")
-1ZZZparseFunction:com.addi.core.functions.FunctionParser:virtualinvoke $r3.<com.addi.core.functions.UserFunction: void setScript(boolean)>(1)
27831ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:<com.addi.core.interpreter.ErrorLogger: java.lang.String indentS> = $r0
-1ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:$r0 = <com.addi.core.interpreter.ErrorLogger: java.lang.String indentS>
-1ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:$i0 = virtualinvoke $r0.<java.lang.String: int length()>()
-1ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:if $i0 != 0 goto $r0 = <com.addi.core.interpreter.ErrorLogger: java.lang.String indentS>
-1ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:return
-1ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:$i0 = $i0 + -1
-1ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:$r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0)
-1ZZZdecreaseIndent:com.addi.core.interpreter.ErrorLogger:<com.addi.core.interpreter.ErrorLogger: java.lang.String indentS> = $r0
27025ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: java.util.Properties props> = $r4
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:$r1 = new java.util.HashMap
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:specialinvoke $r1.<java.util.HashMap: void <init>()>()
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: java.util.Map fileNames> = $r1
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: java.util.Map filePermissions> = $r1
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: java.util.Map fileWriters> = $r1
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: java.util.Map fileReaders> = $r1
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: int nextFileNum> = 0
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:$r2 = new java.text.DecimalFormat
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:$r0 = new java.text.DecimalFormatSymbols
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:$r3 = <java.util.Locale: java.util.Locale ENGLISH>
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r3)
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:specialinvoke $r2.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>("0.0000", $r0)
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: java.text.NumberFormat numFormat> = $r2
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:$r4 = new java.util.Properties
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:specialinvoke $r4.<java.util.Properties: void <init>()>()
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:<com.addi.core.interpreter.GlobalValues: java.util.Properties props> = $r4
-1ZZZ<clinit>:com.addi.core.interpreter.GlobalValues:return
26989ZZZ<init>:com.addi.AddiBase$2:specialinvoke $r0.<java.lang.Object: void <init>()>()
-1ZZZ<init>:com.addi.AddiBase$2:$r0 := @this: com.addi.AddiBase$2
-1ZZZ<init>:com.addi.AddiBase$2:$r1 := @parameter0: com.addi.AddiBase
-1ZZZ<init>:com.addi.AddiBase$2:$r0.<com.addi.AddiBase$2: com.addi.AddiBase this$0> = $r1
-1ZZZ<init>:com.addi.AddiBase$2:specialinvoke $r0.<java.lang.Object: void <init>()>()
-1ZZZ<init>:com.addi.AddiBase$2:return
2237ZZZinit:com.addi.CandidateView:staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r9, $r10)
-1ZZZinit:com.addi.CandidateView:$r0 := @this: com.addi.CandidateView
-1ZZZinit:com.addi.CandidateView:$r1 := @parameter0: android.content.Context
-1ZZZinit:com.addi.CandidateView:$r2 = (com.addi.AddiBase) $r1
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: com.addi.AddiBase mService> = $r2
-1ZZZinit:com.addi.CandidateView:$r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>()
-1ZZZinit:com.addi.CandidateView:$r4 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301602)
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: android.graphics.drawable.Drawable mSelectionHighlight> = $r4
-1ZZZinit:com.addi.CandidateView:$r4 = $r0.<com.addi.CandidateView: android.graphics.drawable.Drawable mSelectionHighlight>
-1ZZZinit:com.addi.CandidateView:$r5 = newarray (int)[4]
-1ZZZinit:com.addi.CandidateView:$r5[0] = 16842910
-1ZZZinit:com.addi.CandidateView:$r5[1] = 16842908
-1ZZZinit:com.addi.CandidateView:$r5[2] = 16842909
-1ZZZinit:com.addi.CandidateView:$r5[3] = 16842919
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r5)
-1ZZZinit:com.addi.CandidateView:$i0 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>(2130771968)
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void setBackgroundColor(int)>($i0)
-1ZZZinit:com.addi.CandidateView:$i0 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>(2130771969)
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: int mColorNormal> = $i0
-1ZZZinit:com.addi.CandidateView:$i0 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>(2130771971)
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: int mColorRecommended> = $i0
-1ZZZinit:com.addi.CandidateView:$i0 = virtualinvoke $r3.<android.content.res.Resources: int getColor(int)>(2130771970)
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: int mColorOther> = $i0
-1ZZZinit:com.addi.CandidateView:$i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2130837505)
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: int mVerticalPadding> = $i0
-1ZZZinit:com.addi.CandidateView:$r6 = new android.graphics.Paint
-1ZZZinit:com.addi.CandidateView:specialinvoke $r6.<android.graphics.Paint: void <init>()>()
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: android.graphics.Paint mPaint> = $r6
-1ZZZinit:com.addi.CandidateView:$r6 = $r0.<com.addi.CandidateView: android.graphics.Paint mPaint>
-1ZZZinit:com.addi.CandidateView:$i0 = $r0.<com.addi.CandidateView: int mColorNormal>
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i0)
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r6.<android.graphics.Paint: void setAntiAlias(boolean)>(1)
-1ZZZinit:com.addi.CandidateView:$i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2130837504)
-1ZZZinit:com.addi.CandidateView:$f0 = (float) $i0
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r6.<android.graphics.Paint: void setTextSize(float)>($f0)
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r6.<android.graphics.Paint: void setStrokeWidth(float)>(0.0F)
-1ZZZinit:com.addi.CandidateView:$r7 = new android.view.GestureDetector
-1ZZZinit:com.addi.CandidateView:$r8 = new com.addi.CandidateView$1
-1ZZZinit:com.addi.CandidateView:specialinvoke $r8.<com.addi.CandidateView$1: void <init>(com.addi.CandidateView)>($r0)
-1ZZZinit:com.addi.CandidateView:specialinvoke $r7.<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>($r8)
-1ZZZinit:com.addi.CandidateView:$r0.<com.addi.CandidateView: android.view.GestureDetector mGestureDetector> = $r7
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void setHorizontalFadingEdgeEnabled(boolean)>(1)
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void setWillNotDraw(boolean)>(0)
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void setHorizontalScrollBarEnabled(boolean)>(0)
-1ZZZinit:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void setVerticalScrollBarEnabled(boolean)>(0)
-1ZZZinit:com.addi.CandidateView:$r9 = $r0.<com.addi.CandidateView: java.util.List mPossibleCompletions>
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("abs")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("accumarray")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("accumdim")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acos")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acosd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acosh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acotd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acoth")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acsc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acscd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("acsch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("addlistener")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("addpath")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("addproperty")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("addtodate")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("airy")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("all")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("allchild")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("amd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ancestor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("and")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("angle")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("anova")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("any")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("arch_fit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("arch_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("arch_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("area")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("arg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("argnames")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("argv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("arma_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("arrayfun")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ascii")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("asctime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("asec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("asecd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("asech")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("asin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("asind")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("asinh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("assert")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("assignin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("atan")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("atan2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("atand")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("atanh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("atexit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("autoload")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("autoreg_matrix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("autumn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("available_graphics_toolkits")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("axes")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("axis")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("balance")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("barh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bartlett")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bartlett_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("base2dec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("beep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("beep_on_error")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("besselh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("besseli")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("besselj")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("besselk")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bessely")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("beta")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("betacdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("betainc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("betainv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("betaln")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("betapdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("betarnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bicgstab")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bicubic")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bin2dec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("binary")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bincoeff")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("binocdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("binoinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("binopdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("binornd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitand")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitcmp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitget")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitmax")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitpack")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitset")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitshift")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bitxor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("blackman")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("blanks")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("blkdiag")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bone")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("box")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("brighten")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bsxfun")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("builtin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bunzip2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("byte_size")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("bzip2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("calendar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("canonicalize_file_name")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cart2pol")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cart2sph")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cast")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cauchy_cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cauchy_inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cauchy_pdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cauchy_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("caxis")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cbrt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ccolamd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ceil")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cell")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cell2mat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cell2struct")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("celldisp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cellfun")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cellslices")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cellstr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("center")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cgs")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("char")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chi2cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chi2inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chi2pdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chi2rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chisquare_test_homogeneity")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chisquare_test_independence")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chol")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("chol2inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("choldelete")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cholinsert")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cholinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cholshift")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cholupdate")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("circshift")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cla")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("clabel")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("class")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("clc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("clear")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("clf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("clock")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cloglog")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("close")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("closereq")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("colamd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("colloc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("colon")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("colorbar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("colormap")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("colperm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("columns")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("comet")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("comet3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("command_line_path")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("common_size")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("commutation_matrix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("compan")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("compare_versions")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("compass")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("completion_append_char")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("completion_matches")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("complex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("computer")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cond")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("condest")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("confirm_recursive_rmdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("conj")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("contour")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("contour3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("contourc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("contourf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("contrast")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("conv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("conv2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("convhull")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("convhulln")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("convn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cool")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("copper")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("copyfile")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cor_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("corrcoef")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cos")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cosd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cosh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cotd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("coth")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cov")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cplxpair")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cputime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("crash_dumps_octave_core")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cross")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("csc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cscd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("csch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cstrcat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("csvread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("csvwrite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("csymamd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ctime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ctranspose")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cummax")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cummin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cumprod")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cumsum")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cumtrapz")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("curl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cut")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("cylinder")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("daspk")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("daspk_options")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dasrt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dasrt_options")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dassl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dassl_options")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("date")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("datenum")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("datestr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("datetick")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("datevec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbclear")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbcont")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbdown")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dblquad")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbquit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbstack")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbstatus")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbstep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbstop")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbtype")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbup")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dbwhere")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("deal")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("deblank")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("debug_on_error")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("debug_on_interrupt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("debug_on_warning")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dec2base")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dec2bin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dec2hex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("deconv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("default_save_options")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("del2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("delaunay")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("delaunay3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("delaunayn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("delete")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dellistener")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("demo")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("det")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("detrend")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("diag")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("diary")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("diff")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("diffpara")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("diffuse")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dims")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("discrete_cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("discrete_inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("discrete_pdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("discrete_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("disp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("display")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("divergence")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dlmread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dlmwrite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dmperm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("do_string_escapes")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("doc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("doc_cache_file")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dos")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("double")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("drawnow")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dsearch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dsearchn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("dup2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("duplication_matrix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("durbinlevinson")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("e")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("echo")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("echo_executing_commands")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("edit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("edit_history")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("EDITOR")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("eig")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("eigs")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("elem")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ellipsoid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("empirical_cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("empirical_inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("empirical_pdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("empirical_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("endgrent")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("endpwent")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("eomday")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("eps")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("eq")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("erf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("erfc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("erfcx")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("erfinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("errno")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("errno_list")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("error")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("errorbar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("etime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("etree")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("etreeplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("eval")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("evalin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("example")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("exec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("EXEC_PATH")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("exist")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("exit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("exp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("expcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("expinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("expm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("expm1")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("exppdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("exprnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("eye")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezcontour")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezcontourf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezmesh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezmeshc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezplot3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezpolar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezsurf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ezsurfc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("f_test_regression")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("factor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("factorial")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fail")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("FALSE")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fclear")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fclose")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fcntl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fdisp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("feather")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("feof")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ferror")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("feval")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fflush")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fft")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fft2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fftconv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fftfilt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fftn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fftshift")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fftw")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fgetl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fgets")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fieldnames")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("figure")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("file_in_loadpath")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("file_in_path")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fileattrib")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("filemarker")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fileparts")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("filesep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fill")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("filter")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("filter2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("find")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("find_dir_in_path")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("findall")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("findobj")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("findstr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("finite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("finv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fixed_point_format")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("flag")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("flipdim")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fliplr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("flipud")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("floor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fmod")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fnmatch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("foo")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fopen")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fork")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("format")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("formula")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fortran_vec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fprintf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fputs")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fractdiff")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("freport")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("freqz")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("freqz_plot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("frewind")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("frnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fscanf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fseek")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fskipl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fsolve")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ftell")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ftp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("full")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fullfile")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("func2str")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("functions")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fwrite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("fzero")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gamcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gaminv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gamma")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gammainc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gammaln")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gampdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gamrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gca")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gcbf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gcbo")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gcd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gcf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ge")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("genpath")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("genvarname")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("geocdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("geoinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("geopdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("geornd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("get")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getegid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getenv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("geteuid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getfield")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getgid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getgrent")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getgrgid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getgrnam")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getpgrp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getpid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getppid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getpwent")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getpwnam")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getpwuid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getrusage")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("getuid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ginput")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("givens")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("glob")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("glpk")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gls")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gmap40")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gmtime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gnuplot_binary")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gradient")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("graphics_toolkit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gray")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gray2ind")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("grid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("griddata")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("griddata3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("griddatan")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gtext")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gui_mode")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gunzip")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("gzip")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hadamard")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hamming")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hankel")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hanning")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("help")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hess")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hex2dec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hex2num")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hggroup")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hidden")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hilb")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hist")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("histc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("history")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("history_control")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("history_file")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("history_size")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("history_timestamp_format_string")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hold")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("home")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("horzcat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hotelling_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hotelling_test_2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("housh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hsv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hsv2rgb")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hurst")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hygecdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hygeinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hygepdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hygernd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("hypot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("I")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("idivide")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ifelse")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ifft")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ifft2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ifftn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ifftshift")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ignore_function_time_stamp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("imag")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("image")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("IMAGE_PATH")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("imagesc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("imfinfo")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("imread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("imshow")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("imwrite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ind2gray")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ind2rgb")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ind2sub")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("index")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("Inf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("inferiorto")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("info")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("info_file")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("info_program")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("inline")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("inpolygon")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("input")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("inputname")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("int16")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("int2str")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("int32")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("int64")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("int8")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("interp1")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("interp1q")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("interp2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("interp3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("interpft")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("interpn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("intersect")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("intmax")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("intmin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("invhilb")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ipermute")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("iqr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("is_absolute_filename")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("is_duplicate_entry")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("is_leap_year")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("is_rooted_relative_filename")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("is_valid_file_id")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isa")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isalnum")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isalpha")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isargout")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isascii")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isbool")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("iscell")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("iscellstr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ischar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("iscntrl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("iscomplex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isdebugmode")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isdefinite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isdigit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isempty")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isequal")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isequalwithequalnans")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isfield")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isfigure")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isfinite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isfloat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isglobal")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isgraph")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ishandle")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ishermitian")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ishghandle")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ishold")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isieee")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isindex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isinf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isinteger")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isletter")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("islogical")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("islower")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ismac")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ismatrix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ismember")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ismethod")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isna")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isnan")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isnull")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isnumeric")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isobject")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ispc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isprime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isprint")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isprop")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ispunct")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isreal")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isscalar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("issorted")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isspace")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("issparse")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("issquare")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isstrprop")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isstruct")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("issymmetric")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isunix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isupper")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isvarname")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isvector")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("isxdigit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("jet")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kbhit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kendall")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("keyboard")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kill")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kolmogorov_smirnov_cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kolmogorov_smirnov_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kolmogorov_smirnov_test_2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kron")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kruskal_wallis_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("krylov")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("kurtosis")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("laplace_cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("laplace_inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("laplace_pdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("laplace_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lasterr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lasterror")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lastwarn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lcm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ldivide")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("le")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("legend")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("legendre")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("length")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lgamma")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("license")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lin2mu")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("line")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("link")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("linkprop")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("linspace")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("list_primes")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("load")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("loadaudio")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("loadobj")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("localtime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("log")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("log10")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("log1p")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("log2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logical")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logistic_cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logistic_inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logistic_pdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logistic_regression")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logistic_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("loglog")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("loglogerr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logncdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logninv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lognpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lognrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("logspace")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lookfor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lookup")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lower")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ls")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ls_command")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lsode")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lsode_options")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lsqnonneg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lstat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("lu")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("luinc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("luupdate")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("magic")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mahalanobis")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("make_absolute_filename")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("makeinfo_program")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("manova")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mat2cell")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mat2str")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("matlabroot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("matrix_type")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("max")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("max_recursion_depth")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mcnemar_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("md5sum")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mean")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("meansq")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("median")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("menu")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("merge")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mesh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("meshc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("meshgrid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("meshz")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("methods")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mexext")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mfilename")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mget")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("min")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("minus")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mislocked")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mkdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mkfifo")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mkoctfile")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mkpp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mkstemp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mktime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mldivide")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mlock")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mod")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mode")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("moment")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("more")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mouse_wheel_zoom")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("movefile")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mpoles")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mpower")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mput")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mrdivide")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mtimes")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("mu2lin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("munlock")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("NA")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("namelengthmax")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("NaN")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nargchk")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nargin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nargout")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nargoutchk")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("native_float_format")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nbincdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nbininv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nbinpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nbinrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nchoosek")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ndgrid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ndims")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ne")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nelem")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("newplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("news")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("newtroot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nextpow2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nfields")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nnz")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nonzeros")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("norm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("normcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("normest")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("norminv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("normpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("normrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("not")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("now")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nthroot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ntsc2rgb")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("null")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("num2cell")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("num2hex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("num2str")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("numel")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("nzmax")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ocean")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("octave_config_info")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("octave_core_file_limit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("octave_core_file_name")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("octave_core_file_options")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("OCTAVE_HOME")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("OCTAVE_VERSION")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ols")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("onenormest")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ones")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("operator ()")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("optimget")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("optimset")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("or")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("orderfields")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("orient")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("orth")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("output_max_field_width")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("output_precision")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("P_tmpdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pack")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("page_output_immediately")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("page_screen_output")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("PAGER")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("PAGER_FLAGS")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pareto")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("parseparams")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pascal")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("patch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("path")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pathdef")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pathsep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pause")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pcg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pchip")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pclose")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pcolor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pcr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("peaks")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("periodogram")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("perl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("perms")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("permute")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pi")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pie")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pie3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pink")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pipe")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pkg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("planerot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("playaudio")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("plot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("plot3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("plotmatrix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("plotyy")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("plus")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("poisscdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("poissinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("poisspdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("poissrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pol2cart")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("poly")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyaffine")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyarea")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyderiv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyfit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polygcd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyint")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyout")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyreduce")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyval")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("polyvalm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("popen")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("popen2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("postpad")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pow2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("power")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("powerset")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ppder")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ppint")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ppjumps")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ppplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ppval")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pqpnonneg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("prepad")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("primes")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("print")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("print_empty_dimensions")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("print_struct_array_contents")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("print_usage")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("printf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("prism")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("probit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("prod")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("program_invocation_name")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("program_name")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("prop_test_2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("PS1")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("PS2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("PS4")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("putenv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("puts")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("pwd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qqplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qrdelete")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qrinsert")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qrshift")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qrupdate")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quad")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quad_options")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quadcc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quadgk")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quadl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quadv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quiver")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("quiver3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qz")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("qzhess")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rainbow")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rand")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rande")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("randg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("randi")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("randn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("randp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("randperm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("range")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rank")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ranks")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rats")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rcond")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rdivide")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("re_read_readline_init_file")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("read_readline_init_file")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("readdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("readlink")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("real")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("reallog")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("realmax")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("realmin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("realpow")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("realsqrt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("record")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rectangle_lw")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rectangle_sw")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rectint")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("refresh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("refreshdata")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("regexp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("regexpi")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("regexprep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("regexptranslate")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rehash")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rem")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rename")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("repelems")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("repmat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("reset")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("reshape")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("residue")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("resize")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("restoredefaultpath")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rethrow")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("return")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rgb2hsv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rgb2ind")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rgb2ntsc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ribbon")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rindex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rmdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rmfield")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rmpath")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("roots")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rose")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rosser")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rot90")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rotdim")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("round")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("roundb")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rows")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rref")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rsf2csf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("run")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("run_count")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("run_history")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("run_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rundemos")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("runtests")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("S_ISBLK")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("S_ISCHR")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("S_ISDIR")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("S_ISFIFO")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("S_ISLNK")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("S_ISREG")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("S_ISSOCK")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("save")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("save_header_format_string")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("save_precision")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("saveas")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("saveaudio")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("saveobj")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("savepath")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("saving_history")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("scanf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("scatter")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("scatter3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("schur")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sec")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("secd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sech")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("SEEK_CUR")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("SEEK_END")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("SEEK_SET")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("semilogx")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("semilogxerr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("semilogy")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("semilogyerr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("set")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("setaudio")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("setdiff")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("setenv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("setfield")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("setgrent")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("setpwent")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("setxor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("shading")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("shell_cmd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("shg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("shift")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("shiftdim")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("SIG")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sighup_dumps_octave_core")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sign")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sign_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sigterm_dumps_octave_core")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("silent_functions")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sinc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sind")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sinetone")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sinewave")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("single")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sinh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("size")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("size_equal")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sizemax")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sizeof")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("skewness")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sleep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("slice")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sombrero")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sort")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sortrows")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("source")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spalloc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sparse")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sparse_auto_mutate")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spaugment")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spconvert")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spdiags")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spearman")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spectral_adf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spectral_xdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("specular")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("speed")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spencer")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("speye")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spfun")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sph2cart")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sphere")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spinmap")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spline")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("split_long_rows")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spones")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spparms")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sprand")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sprandn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sprandsym")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sprank")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spring")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sprintf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spstats")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("spy")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sqp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sqrt")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sqrtm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("squeeze")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sscanf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stairs")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("statistics")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("std")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stderr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stdin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stdnormal_cdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stdnormal_inv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stdnormal_pdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stdnormal_rnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stdout")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stem")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stem3")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("stft")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("str2double")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("str2func")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("str2num")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strcat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strchr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strcmp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strcmpi")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strfind")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strftime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("string_fill_char")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strjust")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strmatch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strncmp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strncmpi")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strptime")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strrep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strsplit")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strtok")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strtrim")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strtrunc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("struct")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("struct2cell")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("struct_levels_to_print")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("structfun")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("strvcat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("studentize")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sub2ind")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("subplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("subsasgn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("subsindex")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("subspace")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("subsref")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("substr")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("substruct")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sum")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("summer")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sumsq")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("superiorto")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("suppress_verbose_help_message")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("surf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("surface")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("surfc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("surfl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("surfnorm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("svd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("svd_driver")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("svds")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("swapbytes")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("syl")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("sylvester_matrix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("symamd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("symbfact")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("symlink")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("symrcm")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("symvar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("synthesis")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("system")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("t_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("t_test_2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("t_test_regression")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("table")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tan")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tand")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tanh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tempdir")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tempname")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("text")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("textread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("textscan")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tic")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tilde_expand")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("time")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("times")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("title")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tmpfile")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tmpnam")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("toascii")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("toc")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("toeplitz")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tolower")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("toupper")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("trace")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("transpose")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("trapz")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("treelayout")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("treeplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("triangle_lw")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("triangle_sw")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tril")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("trimesh")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("triplequad")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("triplot")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("trisurf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("triu")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("trnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("TRUE")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tsearch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("tsearchn")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("type")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("typecast")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("typeinfo")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("u_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("uint16")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("uint32")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("uint64")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("uint8")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("umask")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("uminus")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("uname")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("undo_string_escapes")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unidcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unidinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unidpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unidrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unifcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unifinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unifpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unifrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("union")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unique")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unix")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unlink")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unmkpp")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unpack")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("untabify")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("untar")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unwrap")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("unzip")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("uplus")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("upper")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("urlread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("urlwrite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("usage")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("usleep")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("v")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("validatestring")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("vander")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("var")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("var_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("vech")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("vectorize")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ver")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("version")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("vertcat")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("view")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("voronoi")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("voronoin")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("waitforbuttonpress")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("waitpid")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("warning")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("warranty")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wavread")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wavwrite")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wblcdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wblinv")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wblpdf")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wblrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WCONTINUE")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WCOREDUMP")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("weekday")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("welch_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WEXITSTATUS")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("what")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("which")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("white")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("whitebg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("who")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("whos")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("whos_line_format")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wienrnd")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WIFCONTINUED")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WIFEXITED")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WIFSIGNALED")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WIFSTOPPED")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wilcoxon_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("wilkinson")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("winter")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WNOHANG")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WSTOPSIG")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WTERMSIG")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("WUNTRACED")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("xlabel")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("xlim")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("xor")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("yes_or_no")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("ylabel")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("yulewalker")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("z_test")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("z_test_2")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("zeros")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("zip")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("zlabel")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("deg2rad")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("rad2deg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("azimuth")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("distance")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("km2deg")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("reckon")
-1ZZZinit:com.addi.CandidateView:$r9 = $r0.<com.addi.CandidateView: java.util.List mPossibleCompletionsRsrvd>
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("if")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("while")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("for")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("switch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("global")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("break")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("continue")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("catch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("persistent")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("try")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("elseif")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("else")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("endif")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("end")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("endfunction")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("case")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("default")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("otherwise")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("endswitch")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("endwhile")
-1ZZZinit:com.addi.CandidateView:interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>("endfor")
-1ZZZinit:com.addi.CandidateView:$r10 = new com.addi.CandidateView$MyComparator
-1ZZZinit:com.addi.CandidateView:specialinvoke $r10.<com.addi.CandidateView$MyComparator: void <init>(com.addi.CandidateView)>($r0)
-1ZZZinit:com.addi.CandidateView:staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r9, $r10)
-1ZZZinit:com.addi.CandidateView:return
53ZZZ<init>:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void init(android.content.Context)>($r1)
-1ZZZ<init>:com.addi.CandidateView:$r0 := @this: com.addi.CandidateView
-1ZZZ<init>:com.addi.CandidateView:$r1 := @parameter0: android.content.Context
-1ZZZ<init>:com.addi.CandidateView:$r2 := @parameter1: android.util.AttributeSet
-1ZZZ<init>:com.addi.CandidateView:specialinvoke $r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2)
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: int mTouchX> = -1
-1ZZZ<init>:com.addi.CandidateView:$r3 = newarray (int)[1024]
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: int[] mWordWidth> = $r3
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: int[] mWordX> = $r3
-1ZZZ<init>:com.addi.CandidateView:$r4 = new java.util.ArrayList
-1ZZZ<init>:com.addi.CandidateView:specialinvoke $r4.<java.util.ArrayList: void <init>()>()
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: java.util.List mPossibleCompletions> = $r4
-1ZZZ<init>:com.addi.CandidateView:$r0.<com.addi.CandidateView: java.util.List mPossibleCompletionsRsrvd> = $r4
-1ZZZ<init>:com.addi.CandidateView:virtualinvoke $r0.<com.addi.CandidateView: void init(android.content.Context)>($r1)
-1ZZZ<init>:com.addi.CandidateView:return
0ZZZ<init>:com.addi.Addi:specialinvoke $r0.<com.addi.AddiBase: void <init>()>()
-1ZZZ<init>:com.addi.Addi:$r0 := @this: com.addi.Addi
-1ZZZ<init>:com.addi.Addi:specialinvoke $r0.<com.addi.AddiBase: void <init>()>()
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: java.lang.String _mResults> = ""
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: java.lang.String _prevCmd> = ""
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: boolean _blockExecute> = 0
-1ZZZ<init>:com.addi.Addi:$r1 = new java.util.Vector
-1ZZZ<init>:com.addi.Addi:specialinvoke $r1.<java.util.Vector: void <init>()>()
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: java.util.Vector _oldCommands> = $r1
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: int _oldCommandIndex> = -1
-1ZZZ<init>:com.addi.Addi:$r2 = new java.lang.String
-1ZZZ<init>:com.addi.Addi:specialinvoke $r2.<java.lang.String: void <init>()>()
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: java.lang.String _version> = $r2
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: boolean _oldSelectionSaved> = 0
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: boolean _selectionSaved> = 0
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: boolean _selectionForwarded> = 0
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: com.addi.session.TermSession _termSession> = null
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: java.lang.String partialLine> = ""
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: boolean interpreterReady> = 0
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: boolean copyingFailed> = 0
-1ZZZ<init>:com.addi.Addi:$r3 = new com.addi.Addi$1
-1ZZZ<init>:com.addi.Addi:specialinvoke $r3.<com.addi.Addi$1: void <init>(com.addi.Addi)>($r0)
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: android.os.Handler _mHandler> = $r3
-1ZZZ<init>:com.addi.Addi:$r4 = new com.addi.Addi$4
-1ZZZ<init>:com.addi.Addi:specialinvoke $r4.<com.addi.Addi$4: void <init>(com.addi.Addi)>($r0)
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: java.lang.Runnable mUpdateResults> = $r4
-1ZZZ<init>:com.addi.Addi:$r5 = new com.addi.Addi$10
-1ZZZ<init>:com.addi.Addi:specialinvoke $r5.<com.addi.Addi$10: void <init>(com.addi.Addi)>($r0)
-1ZZZ<init>:com.addi.Addi:$r0.<com.addi.Addi: java.lang.Runnable mRunThread> = $r5
-1ZZZ<init>:com.addi.Addi:return
